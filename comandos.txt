<<<<<<< Updated upstream
            //comandos mais importantes no git//
* inciando um repo
 - git init
 - git add ./nome do arquivo
 - git commit -a -m "mensagem de commit"
 - git branch -m "novo nome da branch"
 - git remote add "nome para o branch remoto" (link do repo no github)
 - git push origin main
             ou
 - git clone (link do repo no github)


* outros comandos importantes
 - git rm "nome do arquivo" (remove arquivos)
 - git log (mostra o historico de commit's)
 -git log -p (mostra o historico de commit's e as suas alterações)
 - git mv "nome do arquivo" (serve para mover e renomear arquivos)
 - git chekout "nome do arquivo" (volta para o estado original do ultimo push)
 - git reset --hard "branch remoto" (volta para o estado inicial do ultimo push apagando todas as mudanças)
 - git reset "nome do branch remoto" (volta para o estado incial do ultimo push mas não apaga os arquivos modificados)
 -git show <hash do commit> ; <nome da tag> ; <numero da stash> ; etc  (mostra os detalhes do que quiser saber)


* usando branch's
 -git branch "nome da branch" (criação de u branch)
 -git branch (mostra todas as branch criadas)
 -git branch -d "nome do branch que quer deletar" (deleta a branch em que vc está)
 -git checkout "nome da branch que deseja mudar" (muda de para a branch selecionada)
 -git checkout -b "nome da nova branch" (cria uma outra branch e alterna para ela)
 -git merge "nome do branch que deseja mesclar" (junta os branch) //AVISO// (ter cuidado na mesclagem das branch com a main pois a main é o "codigo certo") 
 -git push origin <nome da branch> (manda a branch selecionada para o github)



* usando o "git stash" (serve para jogar o codigo feito no "lixo" e se quiser depois pode recuperar)
(para cancelar o comando do git stash antes da confirmação basta apertar crtl+c)
 -git stash (guarda o codigo atual em uma "caixa" ,... e volta o uiltimo commit/pull/criação dessa branch apartir da branch principal)
 -git stash list (ver todos os stash's feitos ...)
 -git stash apply "mumero da stash" (recupera o codigo que estava nessa stash)
 -git stash show -p "nome da branch" (mostra as diferenças do codigo atual para o codigo da stash selecionada)
 -git stash drop "nome da stash" (remove a stash)
 -git stash clear (remove todas as stash's que existem)


* utilizando tags (cria checkpoint's do codigo.)
 -git tag <nome da tag> (cria um tag simples)
 -git tag -a <nome da tag> -m <mensagem da tag> (cria uma tag com mensagem)
 -git tag (mostra todas as tags que exsitem na branch)
 -git tag -d <nome da tag> (deleta a tag desejada)
 -git checkout <nome da tag> (restaura a tag desejada)
 -git show <nome da tag> (mostra os detalhes dessa tag)
 -git push origin <nome da tag> (envia a tag para o github)
 -git push origin --tags (envia todas as tags para o github)

* compartilhamento e atualização de repositorios (comandos que podem ajudar no versionamento de codigo no dia a dia)
 -git fetch (busca e baixa atualizações de branch's do github sem fazer merge no repo local)
 -git pull (sempre verificar se esta na versão mais atualizada da branch que estiver trabalhando)
 -git 
